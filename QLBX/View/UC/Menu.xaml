<UserControl x:Class="QLBX.UC.Menu"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:QLBX.Converter"
             mc:Ignorable="d"
             d:DesignWidth="300">
    <UserControl.Resources>
        <!-- Custom ToggleButton -->
        <Style x:Key="ToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Unchecked" To="Checked">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <QuarticEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition GeneratedDuration="0" To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition GeneratedDuration="0" To="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <QuarticEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <materialDesign:PackIcon Kind="MenuDown" Opacity=".38" x:Name="ExpandPath" RenderTransformOrigin="0.5,0.5"
                                      Height="24" Width="24" Foreground="{TemplateBinding Foreground}">
                                <materialDesign:PackIcon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform />
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </materialDesign:PackIcon.RenderTransform>
                            </materialDesign:PackIcon>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Custom Header Expander -->
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" Padding="24,5,5,5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              VerticalAlignment="Center"
                                              Margin="0,0,16,0" />
                                <ToggleButton Grid.Column="1"
                                          VerticalAlignment="Center"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ToggleButton}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <StackPanel>
        <ListBox Background="{x:Null}" Foreground="#FF6CE3FB" FontWeight="Bold">
            <ListBox.Resources>
                <!-- Math Converter -->
                <viewModel:MathMultipleConverter x:Key="MathMlpMultipleConverter" Operation="Multiply" />
                <Style TargetType="{x:Type Expander}">
                    <!-- Set isExpander -->
                    <Setter Property="IsExpanded" 
                            Value="{Binding Path=IsSelected, 
                                        RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                    <!-- Set Custom Expander -->
                    <Setter Property="FontSize" Value="18"/>
                    <Setter Property="MinHeight" Value="40"/>
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="#00FFFFFF"/>
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Expander}">
                                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="ExpansionStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0" To="Expanded">
                                                    <VisualTransition.GeneratedEasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </VisualTransition.GeneratedEasingFunction>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0:0:0.3"/>
                                                    </Storyboard>
                                                </VisualTransition>
                                                <VisualTransition GeneratedDuration="0" To="Collapsed">
                                                    <VisualTransition.GeneratedEasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </VisualTransition.GeneratedEasingFunction>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0:0:0.3"/>
                                                    </Storyboard>
                                                </VisualTransition>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Expanded">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="1" Duration="0"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Collapsed">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content" To="0" Duration="0"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <DockPanel Background="{TemplateBinding Background}">
                                        <ToggleButton Name="HeaderSite"
                                              DockPanel.Dock="Top"
                                              BorderThickness="0" Cursor="Hand"
                                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ExpanderDownHeaderStyle}"
                                              TextElement.FontSize="14"
                                              Opacity=".87"
                                              Foreground="{TemplateBinding Foreground}"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"/>
                                        <Border Name="ContentSite"
                                        DockPanel.Dock="Bottom"                                    >
                                            <StackPanel Name="ContentPanel"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Margin="{TemplateBinding Padding}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <StackPanel.Height>
                                                    <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                                        <Binding ElementName="PART_Content" Path="ActualHeight"/>
                                                        <Binding ElementName="PART_Content" Path="Opacity"/>
                                                    </MultiBinding>
                                                </StackPanel.Height>
                                                <StackPanel.Width>
                                                    <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                                        <Binding ElementName="PART_Content" Path="ActualWidth"/>
                                                        <Binding ElementName="PART_Content" Path="Opacity"/>
                                                    </MultiBinding>
                                                </StackPanel.Width>
                                                <ContentPresenter Name="PART_Content" Focusable="False"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                            </StackPanel>
                                        </Border>
                                    </DockPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="ExpandDirection" Value="Down">
                                        <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top"/>
                                        <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Bottom"/>
                                        <Setter Property="Orientation" TargetName="ContentPanel" Value="Vertical"/>
                                        <Setter Property="Width" TargetName="ContentPanel" Value="Auto"/>
                                        <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderDownHeaderStyle}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="Button" x:Key="luanStyle">
                    <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                    <Setter Property="Background" Value="{x:Null}"></Setter>
                    <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
                    <Setter Property="Foreground" Value="#FF6CE3FB"></Setter>
                    <Setter Property="Margin" Value="20 0 0 0"/>
                </Style>
            </ListBox.Resources>

            <ListBox.Template>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter/>
                </ControlTemplate>
            </ListBox.Template>

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter Content="{TemplateBinding Content}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
             
            <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
            <Expander>
                <Expander.Header>
                    <TextBlock>VÉ</TextBlock>
                </Expander.Header>
                <StackPanel Margin="20,0,0,0">
                    <Button Style="{StaticResource luanStyle}" Command="{Binding DatVeCommand}" Content="Đặt Vé" CommandParameter="{Binding ElementName=luna}"></Button>
                    <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                </StackPanel>
            </Expander>
            <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />

            <Expander>
                <Expander.Header>
                    <TextBlock>NHÂN VIÊN</TextBlock>
                </Expander.Header>
                <StackPanel Margin="20,0,0,0">
                    <Button Content="Tài Xế" Command="{Binding TaiXeCommand}" Style="{StaticResource luanStyle}"
                                         CommandParameter="{Binding ElementName=luna}"></Button>
                    <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                    <Button Content="Phụ Xe" Command="{Binding PhuXeCommand}" Style="{StaticResource luanStyle}"
                                        CommandParameter="{Binding ElementName=luna}"></Button>
                    <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                    <Button Content="Bán Vé Xe" Command="{Binding NhanVienBanVeCommand}" Style="{StaticResource luanStyle}"
                                        CommandParameter="{Binding ElementName=luna}"></Button>
                    
                    
                </StackPanel>
            </Expander>
            <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />

            <Expander>
                <Expander.Header>
                    <TextBlock>SẮP LỊCH</TextBlock>
                </Expander.Header>
                <StackPanel Margin="20,0,0,0">
                    <Button Content="Chuyến Xe" Command="{Binding SapLichCommand}"
                                        CommandParameter="{Binding ElementName=luna}" Style="{StaticResource luanStyle}"></Button>
                    <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                </StackPanel>
            </Expander>
            <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
            
            <Expander>
                <Expander.Header>
                    <TextBlock>QUẢN LÝ XE</TextBlock>
                </Expander.Header>
                <StackPanel Margin="20,0,0,0">
                    <Button Content="Chuyến Xe" Command="{Binding ChuyenXeCommand}" Style="{StaticResource luanStyle}"
                                        CommandParameter="{Binding ElementName=luna}"></Button>
                    <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                    <Button Content="Tuyến Xe" Command="{Binding TuyenXeCommand}" Style="{StaticResource luanStyle}"
                                        CommandParameter="{Binding ElementName=luna}"></Button>
                </StackPanel>
            </Expander>
            <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />

            <Expander>
                <Expander.Header>
                    <TextBlock>BẾN XE</TextBlock>
                </Expander.Header>
                <StackPanel Margin="20,0,0,0">
                    <Button Content="Bến Xe" Command="{Binding BenXeCommand}" Style="{StaticResource luanStyle}"
                                        CommandParameter="{Binding ElementName=luna}"></Button>
                </StackPanel>
            </Expander>
            <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />

            <Expander>
                <Expander.Header>
                    <TextBox>THỐNG KÊ</TextBox>
                </Expander.Header>
                <StackPanel Margin="20,0,0,0">
                    <Button Content="Thống Kê" Command="{Binding ThongkeCommand}" Style="{StaticResource luanStyle}"
                                        CommandParameter="{Binding ElementName=luna}"></Button>
                </StackPanel>
            </Expander>
        </ListBox>
    </StackPanel>
</UserControl>
